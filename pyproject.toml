[project]
name = "dozenten-feedback"
version = "0.1.0"
description = "Lecture transcription analysis system using OpenAI and AssemblyAI"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "openai>=1.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "tiktoken>=0.5.0",
    "typing-extensions>=4.0.0",
    "webvtt-py>=0.4.6",
    "assemblyai>=0.43.0",
    "ffmpeg-python>=0.2.0",
]

[tool.ruff]
# Ruff configuration for linting and formatting
line-length = 100
target-version = "py312"

# Enable specific rule sets
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]

# Disable specific rules
lint.ignore = [
    "S101", # Use of assert (common in tests)
    "S105", # Hardcoded password string (too many false positives)
    "S106", # Hardcoded password function argument
    "S107", # Hardcoded password default argument
    "T201", # Print statements (useful for debugging)
]

# Exclude directories
exclude = [".git", ".venv", "__pycache__", ".pytest_cache", "htmlcov"]

[tool.ruff.lint.per-file-ignores]
# Allow print statements and assert in tests
"tests/*" = ["T201", "S101"]
# Allow print statements in example files
"**/example*.py" = ["T201"]

[tool.ruff.lint.isort]
# Configure import sorting
known-first-party = ["src"]
force-single-line = false
combine-as-imports = true

[tool.ruff.format]
# Format configuration
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
# MyPy configuration
python_version = "3.12"
mypy_path = "src"
explicit_package_bases = true
namespace_packages = true
strict = true

# Disable specific strict checks that are too noisy
warn_return_any = false
warn_unused_ignores = false

# Allow untyped calls for third-party libraries without stubs
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = [
    "assemblyai.*",
    "webvtt.*",
    "tiktoken.*",
    "ffmpeg.*",
    "click.*",
    "rich.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "mypy>=1.17.0",
    "ruff>=0.12.0",
    "pre-commit>=4.0.0",
    "types-requests>=2.31.0",
]
